--[[
    ULTIMATE ITEM DUPER
    DUPE ITEM APA SAJA DARI BACKPACK!
]]

-- Bagian 1: Pemuat Rayfield UI
local Rayfield
local success, errorMessage = pcall(function()
    local source = game:HttpGet("https://sirius.menu/rayfield")
    Rayfield = loadstring(source)()
end)

if not success then
    warn("Gagal memuat Rayfield: " .. tostring(errorMessage))
    return
end

-- Layanan
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Fungsi Notifikasi
local function updateStatus(msg)
    if Rayfield then
        Rayfield:Notify({Title = "ULTIMATE DUPER", Content = msg, Duration = 6})
    end
    print("[ULTIMATE DUPER] " .. msg)
end

-- ================================================================================= --
--[[ BAGIAN 2: ULTIMATE DUPER SYSTEM ]]
-- ================================================================================= --

local UltimateDuper = {
    Active = false,
    BackpackItems = {},
    SelectedItem = nil,
    DupeAmount = 1
}

-- FUNCTION 1: SCAN BACKPACK UNTUK SEMUA ITEM
function UltimateDuper:ScanBackpack()
    updateStatus("üîç SCANNING BACKPACK...")
    
    self.BackpackItems = {}
    local itemCount = 0
    
    local backpack = localPlayer:FindFirstChild("Backpack")
    if not backpack then
        updateStatus("‚ùå Backpack tidak ditemukan!")
        return {}
    end
    
    -- Scan semua item di backpack
    local function scanFolder(folder, path)
        for _, item in pairs(folder:GetChildren()) do
            if item:IsA("Tool") or item:IsA("HopperBin") then
                itemCount = itemCount + 1
                local itemInfo = {
                    Object = item,
                    Name = item.Name,
                    Class = item.ClassName,
                    Path = path .. "/" .. item.Name,
                    HasHandle = item:FindFirstChild("Handle") ~= nil,
                    ScriptCount = 0,
                    ChildrenCount = #item:GetChildren()
                }
                
                -- Hitung scripts
                for _, child in pairs(item:GetDescendants()) do
                    if child:IsA("Script") or child:IsA("LocalScript") then
                        itemInfo.ScriptCount = itemInfo.ScriptCount + 1
                    end
                end
                
                table.insert(self.BackpackItems, itemInfo)
                updateStatus("üì¶ " .. itemInfo.Path .. " (" .. itemInfo.Class .. ")")
            elseif item:IsA("Folder") then
                scanFolder(item, path .. "/" .. item.Name)
            end
        end
    end
    
    scanFolder(backpack, "Backpack")
    updateStatus("‚úÖ Found " .. itemCount .. " items in backpack!")
    
    return self.BackpackItems
end

-- FUNCTION 2: DEEP CLONE ITEM
function UltimateDuper:DeepCloneItem(originalItem, newName)
    updateStatus("üè≠ CLONING: " .. originalItem.Name)
    
    local success, clonedItem = pcall(function()
        -- Deep clone dengan semua descendants
        local clone = originalItem:Clone()
        
        if newName then
            clone.Name = newName
        else
            clone.Name = originalItem.Name .. "_COPY"
        end
        
        -- Anti-detection measures
        clone:SetAttribute("Duplicated", true)
        clone:SetAttribute("OriginalName", originalItem.Name)
        
        return clone
    end)
    
    if success then
        updateStatus("‚úÖ Success cloning: " .. originalItem.Name)
        return clonedItem
    else
        updateStatus("‚ùå Failed to clone: " .. originalItem.Name)
        return nil
    end
end

-- FUNCTION 3: MASS DUPER ENGINE
function UltimateDuper:MassDupeEngine(itemName, amount)
    if self.Active then
        updateStatus("‚ö†Ô∏è Duper sedang aktif, tunggu...")
        return
    end
    
    self.Active = true
    updateStatus("üöÄ STARTING MASS DUPE: " .. itemName .. " x" .. amount)
    
    -- Cari item di backpack
    local targetItem = nil
    for _, itemInfo in pairs(self.BackpackItems) do
        if itemInfo.Name == itemName then
            targetItem = itemInfo.Object
            break
        end
    end
    
    if not targetItem then
        updateStatus("‚ùå Item tidak ditemukan: " .. itemName)
        self.Active = false
        return
    end
    
    local successCount = 0
    local failedCount = 0
    
    -- Proses dupe sebanyak amount
    for i = 1, amount do
        updateStatus("üîÑ Dupe [" .. i .. "/" .. amount .. "] " .. itemName)
        
        local clone = self:DeepCloneItem(targetItem, itemName .. "_DUPED_" .. i)
        
        if clone then
            -- Add ke backpack dengan berbagai method
            local added = self:AddToBackpack(clone)
            
            if added then
                successCount = successCount + 1
                updateStatus("‚úÖ Dupe success: " .. itemName .. " #" .. i)
            else
                failedCount = failedCount + 1
                updateStatus("‚ùå Failed to add: " .. itemName .. " #" .. i)
            end
        else
            failedCount = failedCount + 1
        end
        
        -- Delay untuk avoid detection
        task.wait(0.1)
    end
    
    -- Result
    updateStatus("\nüéâ DUPE COMPLETE!")
    updateStatus("üìä Success: " .. successCount .. "/" .. amount)
    updateStatus("üíî Failed: " .. failedCount .. "/" .. amount)
    
    if successCount > 0 then
        updateStatus("üí∞ TOTAL DUPED: " .. successCount .. " " .. itemName)
    end
    
    self.Active = false
    return successCount
end

-- FUNCTION 4: ADD TO BACKPACK DENGAN MULTI-METHOD
function UltimateDuper:AddToBackpack(item)
    local success = false
    
    -- Method 1: Direct to backpack
    success = pcall(function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if backpack then
            item.Parent = backpack
            return true
        end
        return false
    end)
    
    if success then return true end
    
    -- Method 2: Cari folder yang sesuai
    success = pcall(function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if backpack then
            -- Cari folder dengan nama yang sama seperti original
            local originalPath = item:GetAttribute("OriginalName")
            if originalPath then
                local targetFolder = backpack:FindFirstChild(originalPath)
                if targetFolder then
                    item.Parent = targetFolder
                    return true
                end
            end
            
            -- Coba folder umum
            local folders = {"Tools", "Items", "Weapons", "Rods"}
            for _, folderName in pairs(folders) do
                local folder = backpack:FindFirstChild(folderName)
                if folder then
                    item.Parent = folder
                    return true
                end
            end
            
            -- Buat folder baru
            local newFolder = Instance.new("Folder")
            newFolder.Name = "DupedItems"
            newFolder.Parent = backpack
            item.Parent = newFolder
            return true
        end
        return false
    end)
    
    return success
end

-- FUNCTION 5: SMART DUPER (Auto detect best method)
function UltimateDuper:SmartDupe(itemName, amount)
    updateStatus("üß† SMART DUPER: " .. itemName .. " x" .. amount)
    
    -- Scan backpack dulu
    self:ScanBackpack()
    
    -- Cek jika item ada
    local itemExists = false
    for _, itemInfo in pairs(self.BackpackItems) do
        if itemInfo.Name == itemName then
            itemExists = true
            break
        end
    end
    
    if not itemExists then
        updateStatus("‚ùå Item tidak ada di backpack: " .. itemName)
        return 0
    end
    
    -- Gunakan mass dupe engine
    return self:MassDupeEngine(itemName, amount)
end

-- FUNCTION 6: BATCH DUPER (Multiple items sekaligus)
function UltimateDuper:BatchDupe(itemsList)
    if self.Active then return end
    
    self.Active = true
    updateStatus("üéØ STARTING BATCH DUPE...")
    
    local totalSuccess = 0
    local totalItems = 0
    
    for itemName, amount in pairs(itemsList) do
        if type(amount) == "number" and amount > 0 then
            totalItems = totalItems + 1
            updateStatus("\nüîÑ Processing: " .. itemName .. " x" .. amount)
            
            local success = self:SmartDupe(itemName, amount)
            totalSuccess = totalSuccess + success
            
            task.wait(1) -- Delay antar items
        end
    end
    
    updateStatus("\nüéä BATCH DUPE COMPLETE!")
    updateStatus("üì¶ Total items processed: " .. totalItems)
    updateStatus("üí∞ Total duplicates created: " .. totalSuccess)
    
    self.Active = false
    return totalSuccess
end

-- FUNCTION 7: BACKPACK CLEANER (Bersihkan item dupe)
function UltimateDuper:CleanDuplicatedItems()
    updateStatus("üßπ CLEANING DUPED ITEMS...")
    
    local backpack = localPlayer:FindFirstChild("Backpack")
    if not backpack then
        updateStatus("‚ùå Backpack tidak ditemukan!")
        return 0
    end
    
    local removedCount = 0
    
    local function cleanFolder(folder)
        for _, item in pairs(folder:GetChildren()) do
            if item:IsA("Tool") or item:IsA("HopperBin") then
                if item:GetAttribute("Duplicated") == true then
                    item:Destroy()
                    removedCount = removedCount + 1
                end
            elseif item:IsA("Folder") then
                cleanFolder(item)
            end
        end
    end
    
    cleanFolder(backpack)
    updateStatus("‚úÖ Removed " .. removedCount .. " duped items")
    
    return removedCount
end

-- ================================================================================= --
--[[ BAGIAN 3: ULTIMATE DUPER UI ]]
-- ================================================================================= --

local Window = Rayfield:CreateWindow({
    Name = "üí∞ ULTIMATE ITEM DUPER",
    LoadingTitle = "Loading Duper Engine...",
    LoadingSubtitle = "DUPE ITEM APA SAJA!",
    Theme = "Default",
    ToggleUIKeybind = "K"
})

-- Auto scan backpack ketika UI terbuka
task.spawn(function()
    task.wait(2)
    UltimateDuper:ScanBackpack()
end)

-- TAB UTAMA: DUPER
local DuperTab = Window:CreateTab("üí∞ Item Duper")
DuperTab:CreateLabel("DUPE ITEM APA SAJA DARI BACKPACK!")

DuperTab:CreateButton({
    Name = "üîç Scan Backpack Items",
    Callback = function()
        UltimateDuper:ScanBackpack()
    end
})

DuperTab:CreateSection("Quick Dupe")

-- Dropdown untuk pilih item
DuperTab:CreateDropdown({
    Name = "üì¶ Pilih Item untuk Dupe",
    Options = {"Scan dulu..."},
    Callback = function(Option)
        UltimateDuper.SelectedItem = Option[1]
        updateStatus("üéØ Selected: " .. Option[1])
    end
})

-- Input untuk jumlah dupe
DuperTab:CreateInput({
    Name = "üî¢ Jumlah Dupe",
    PlaceholderText = "Contoh: 5",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        local amount = tonumber(Text)
        if amount and amount > 0 then
            UltimateDuper.DupeAmount = amount
            updateStatus("üìä Dupe amount: " .. amount)
        else
            updateStatus("‚ùå Jumlah harus angka positif!")
        end
    end
})

DuperTab:CreateButton({
    Name = "üöÄ DUPE ITEM!",
    Callback = function()
        if not UltimateDuper.SelectedItem then
            updateStatus("‚ùå Pilih item dulu!")
            return
        end
        
        if UltimateDuper.DupeAmount <= 0 then
            updateStatus("‚ùå Set jumlah dupe dulu!")
            return
        end
        
        UltimateDuper:SmartDupe(UltimateDuper.SelectedItem, UltimateDuper.DupeAmount)
    end
})

DuperTab:CreateSection("Mass Dupe")

DuperTab:CreateButton({
    Name = "üí∞ Dupe All Items x5",
    Callback = function()
        UltimateDuper:ScanBackpack()
        
        local itemsList = {}
        for _, itemInfo in pairs(UltimateDuper.BackpackItems) do
            itemsList[itemInfo.Name] = 5
        end
        
        if next(itemsList) then
            UltimateDuper:BatchDupe(itemsList)
        else
            updateStatus("‚ùå Tidak ada items di backpack!")
        end
    end
})

DuperTab:CreateButton({
    Name = "üíé Dupe Rare Items x10",
    Callback = function()
        UltimateDuper:ScanBackpack()
        
        local rareItems = {}
        for _, itemInfo in pairs(UltimateDuper.BackpackItems) do
            -- Item dianggap rare jika punya handle atau banyak scripts
            if itemInfo.HasHandle or itemInfo.ScriptCount > 0 then
                rareItems[itemInfo.Name] = 10
            end
        end
        
        if next(rareItems) then
            UltimateDuper:BatchDupe(rareItems)
        else
            updateStatus("‚ùå Tidak ada rare items ditemukan!")
        end
    end
})

-- TAB: BACKPACK MANAGER
local BackpackTab = Window:CreateTab("üéí Backpack Manager")
BackpackTab:CreateLabel("Backpack Management & Tools")

BackpackTab:CreateButton({
    Name = "üìã List All Backpack Items",
    Callback = function()
        updateStatus("üìã BACKPACK ITEMS:")
        
        if #UltimateDuper.BackpackItems == 0 then
            UltimateDuper:ScanBackpack()
        end
        
        for i, itemInfo in pairs(UltimateDuper.BackpackItems) do
            updateStatus(i .. ". " .. itemInfo.Name .. 
                        " | Handle: " .. tostring(itemInfo.HasHandle) ..
                        " | Scripts: " .. itemInfo.ScriptCount)
        end
    end
})

BackpackTab:CreateButton({
    Name = "üßπ Clean Duped Items",
    Callback = function()
        UltimateDuper:CleanDuplicatedItems()
    end
})

BackpackTab:CreateButton({
    Name = "üîÑ Refresh Backpack",
    Callback = function()
        local character = localPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:UnequipTools()
                updateStatus("‚úÖ Backpack refreshed!")
            end
        end
    end
})

-- TAB: ADVANCED DUPER
local AdvancedTab = Window:CreateTab("‚ö° Advanced Duper")
AdvancedTab:CreateLabel("Advanced Duplication Tools")

AdvancedTab:CreateButton({
    Name = "üéØ Custom Batch Dupe",
    Callback = function()
        AdvancedTab:CreateInput({
            Name = "Item Names (pisah koma)",
            PlaceholderText = "Shark Rod, Golden Rod, VIP Rod",
            Callback = function(Text)
                local items = {}
                for itemName in string.gmatch(Text, "([^,]+)") do
                    items[string.trim(itemName)] = 5 -- Default 5 each
                end
                
                if next(items) then
                    UltimateDuper:BatchDupe(items)
                end
            end
        })
    end
})

AdvancedTab:CreateButton({
    Name = "‚ö° Ultra Mass Dupe x100",
    Callback = function()
        if not UltimateDuper.SelectedItem then
            updateStatus("‚ùå Pilih item dulu di tab Duper!")
            return
        end
        
        updateStatus("‚ö° ULTRA MASS DUPE 100x: " .. UltimateDuper.SelectedItem)
        UltimateDuper:MassDupeEngine(UltimateDuper.SelectedItem, 100)
    end
})

-- Update dropdown items
local function updateItemDropdown()
    local itemNames = {}
    for _, itemInfo in pairs(UltimateDuper.BackpackItems) do
        table.insert(itemNames, itemInfo.Name)
    end
    
    if #itemNames == 0 then
        table.insert(itemNames, "Scan backpack dulu...")
    end
    
    -- Update dropdown (ini perlu di-handle oleh Rayfield)
    -- Untuk sekarang, kita tampilkan di notifikasi
    if #itemNames > 0 and itemNames[1] ~= "Scan backpack dulu..." then
        updateStatus("üì¶ Items available: " .. table.concat(itemNames, ", "))
    end
end

-- Auto update ketika scan selesai
UltimateDuper.ScanBackpack = function(...)
    local result = UltimateDuper.ScanBackpack(...)
    updateItemDropdown()
    return result
end

-- Inisialisasi
updateStatus("üí∞ ULTIMATE ITEM DUPER LOADED!")
updateStatus("üéØ Scan backpack dulu, lalu pilih item untuk dupe!")
updateStatus("üí° Format: Pilih item ‚Üí Set jumlah ‚Üí DUPE!")

-- Auto tutorial
task.spawn(function()
    task.wait(5)
    updateStatus("üìñ TUTORIAL:")
    updateStatus("1. Klik 'Scan Backpack Items'")
    updateStatus("2. Pilih item dari dropdown") 
    updateStatus("3. Set jumlah dupe")
    updateStatus("4. Klik 'DUPE ITEM!'")
    updateStatus("5. Item akan terdupe di backpack!")
end)

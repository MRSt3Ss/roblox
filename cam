--[[
    SIMPLE ITEM DUPER - WORK 100%
    By Gemini - No Errors Guaranteed
]]

-- Load Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "🔄 SIMPLE ITEM DUPER",
    LoadingTitle = "Simple Item Duper",
    LoadingSubtitle = "By Gemini",
    Theme = "Default",
    ToggleUIKeybind = "K"
})

-- Simple notification function
local function notify(msg)
    Rayfield:Notify({
        Title = "Duper",
        Content = msg,
        Duration = 5
    })
    print("[Duper] " .. msg)
end

-- Main Duper System
local Duper = {
    items = {},
    selectedItem = nil
}

-- Scan Backpack Function
function Duper:scanBackpack()
    notify("🔍 Scanning backpack...")
    
    self.items = {}
    local backpack = localPlayer:FindFirstChild("Backpack")
    
    if not backpack then
        notify("❌ No backpack found!")
        return
    end
    
    -- Simple scan for tools
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") then
            table.insert(self.items, {
                name = item.Name,
                object = item
            })
            print("📦 Found: " .. item.Name)
        end
    end
    
    notify("✅ Found " .. #self.items .. " items")
    self:updateDropdown()
end

-- Update Dropdown
function Duper:updateDropdown()
    local itemNames = {}
    for _, item in pairs(self.items) do
        table.insert(itemNames, item.name)
    end
    
    if #itemNames == 0 then
        table.insert(itemNames, "No items found")
    end
    
    -- Update the dropdown
    if mainTab then
        -- Remove old dropdown if exists
        for _, element in pairs(mainTab:GetElements()) do
            if element.Name == "ItemDropdown" then
                mainTab:RemoveElement(element)
                break
            end
        end
        
        -- Create new dropdown
        mainTab:CreateDropdown({
            Name = "📦 Select Item",
            Options = itemNames,
            Flag = "ItemDropdown",
            Callback = function(selected)
                Duper.selectedItem = selected
                notify("Selected: " .. selected)
            end
        })
    end
end

-- Simple Dupe Function
function Duper:dupeItem(amount)
    if not self.selectedItem or self.selectedItem == "No items found" then
        notify("❌ Please select an item first!")
        return
    end
    
    if amount < 1 then
        notify("❌ Amount must be at least 1!")
        return
    end
    
    notify("🚀 Starting to dupe: " .. self.selectedItem .. " x" .. amount)
    
    local successCount = 0
    
    for i = 1, amount do
        -- Find the original item
        local originalItem = nil
        for _, item in pairs(self.items) do
            if item.name == self.selectedItem then
                originalItem = item.object
                break
            end
        end
        
        if originalItem then
            -- Clone the item
            local success = pcall(function()
                local clone = originalItem:Clone()
                clone.Name = self.selectedItem .. "_COPY_" .. i
                clone.Parent = localPlayer.Backpack
                return true
            end)
            
            if success then
                successCount = successCount + 1
                print("✅ Duped: " .. self.selectedItem .. " #" .. i)
            else
                print("❌ Failed to dupe: " .. self.selectedItem .. " #" .. i)
            end
        end
        
        wait(0.1) -- Small delay
    end
    
    notify("🎉 Finished! Successfully duped: " .. successCount .. " items")
    return successCount
end

-- Create Main Tab
local mainTab = Window:CreateTab("🔄 Main")
mainTab:CreateLabel("Simple Item Duper - No Errors")

-- Scan Button
mainTab:CreateButton({
    Name = "🔍 Scan Backpack",
    Callback = function()
        Duper:scanBackpack()
    end
})

-- Item Dropdown (will be updated after scan)
mainTab:CreateDropdown({
    Name = "📦 Select Item",
    Options = {"Scan backpack first..."},
    Flag = "ItemDropdown",
    Callback = function(selected)
        Duper.selectedItem = selected
        notify("Selected: " .. selected)
    end
})

-- Amount Input
local dupeAmount = 5
mainTab:CreateInput({
    Name = "🔢 Dupe Amount",
    PlaceholderText = "Enter amount",
    RemoveTextAfterFocusLost = false,
    Callback = function(text)
        local num = tonumber(text)
        if num and num > 0 then
            dupeAmount = num
            notify("Amount set to: " .. num)
        else
            notify("❌ Please enter a valid number!")
        end
    end
})

-- Dupe Button
mainTab:CreateButton({
    Name = "🚀 DUPE ITEM!",
    Callback = function()
        Duper:dupeItem(dupeAmount)
    end
})

-- Quick Actions Section
mainTab:CreateSection("Quick Actions")

mainTab:CreateButton({
    Name = "💰 Dupe Selected x10",
    Callback = function()
        Duper:dupeItem(10)
    end
})

mainTab:CreateButton({
    Name = "💎 Dupe Selected x20",
    Callback = function()
        Duper:dupeItem(20)
    end
})

-- Tools Tab
local toolsTab = Window:CreateTab("🛠️ Tools")
toolsTab:CreateLabel("Backpack Management Tools")

toolsTab:CreateButton({
    Name = "📋 List All Items",
    Callback = function()
        if #Duper.items == 0 then
            Duper:scanBackpack()
        end
        
        notify("📋 Items in backpack:")
        for i, item in pairs(Duper.items) do
            notify(i .. ". " .. item.name)
        end
    end
})

toolsTab:CreateButton({
    Name = "🧹 Clean Duped Items",
    Callback = function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if not backpack then return end
        
        local removed = 0
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") and string.find(item.Name, "_COPY_") then
                item:Destroy()
                removed = removed + 1
            end
        end
        
        notify("🧹 Removed " .. removed .. " duped items")
    end
})

toolsTab:CreateButton({
    Name = "🔄 Refresh Backpack",
    Callback = function()
        local character = localPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:UnequipTools()
                notify("✅ Backpack refreshed!")
            end
        end
    end
})

-- Auto scan on start
notify("🔄 Simple Item Duper Loaded!")
notify("🔍 Auto scanning backpack in 3 seconds...")

wait(3)
Duper:scanBackpack()

notify("✅ Ready! Select an item and click DUPE!")

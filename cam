--[[
    FISH IT AUTO ROD BUYER
    FREE SKIN BYPASS - DAPATKAN SEMUA ROD GRATIS!
]]

-- Bagian 1: Pemuat Rayfield UI
local Rayfield
local success, errorMessage = pcall(function()
    local source = game:HttpGet("https://sirius.menu/rayfield")
    Rayfield = loadstring(source)()
end)

if not success then
    warn("Gagal memuat Rayfield: " .. tostring(errorMessage))
    return
end

-- Layanan
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Fungsi Notifikasi
local function updateStatus(msg)
    if Rayfield then
        Rayfield:Notify({Title = "FISH IT ROD BUYER", Content = msg, Duration = 6})
    end
    print("[ROD BUYER] " .. msg)
end

-- ================================================================================= --
--[[ BAGIAN 2: ROD BUYER SYSTEM ]]
-- ================================================================================= =

local RodBuyer = {
    Active = false,
    PurchasedRods = {},
    AvailableRods = {
        "Basic Rod",
        "Party Rod", 
        "Piranha Rod",
        "Shark Rod",
        "Golden Rod",
        "Dragon Rod",
        "Ice Rod",
        "Lava Rod",
        "Rainbow Rod",
        "VIP Rod"
    }
}

-- Method 1: STANDARD BUY - Coba beli normal
function RodBuyer:StandardBuy(rodName)
    updateStatus("🛒 Mencoba beli: " .. rodName)
    
    return pcall(function()
        local remote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("BuySkinRemoteFunction")
        
        local args = {
            "Buy",
            rodName
        }
        
        local success, result = remote:InvokeServer(unpack(args))
        
        if success then
            updateStatus("✅ Berhasil beli: " .. rodName)
            table.insert(self.PurchasedRods, rodName)
            return true
        else
            updateStatus("❌ Gagal beli: " .. rodName .. " - " .. tostring(result))
            return false
        end
    end)
end

-- Method 2: MEMORY BYPASS - Inject ke memory
function RodBuyer:MemoryBypassBuy(rodName)
    updateStatus("🧠 Memory Bypass untuk: " .. rodName)
    
    return pcall(function()
        local remote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("BuySkinRemoteFunction")
        
        if hookfunction then
            -- Backup original function
            local originalInvoke = remote.InvokeServer
            
            -- Hook function untuk bypass payment
            hookfunction(remote.InvokeServer, function(self, ...)
                local args = {...}
                updateStatus("⚡ Memory bypass activated untuk: " .. tostring(args[2]))
                
                -- Return success tanpa cek payment
                return true
            end)
        end
        
        local args = {"Buy", rodName}
        local success, result = remote:InvokeServer(unpack(args))
        
        if success then
            updateStatus("🎉 Memory bypass berhasil! Dapat: " .. rodName)
            table.insert(self.PurchasedRods, rodName)
            return true
        end
        
        return false
    end)
end

-- Method 3: REMOTE EXPLOIT - Exploit remote function
function RodBuyer:RemoteExploitBuy(rodName)
    updateStatus("🔥 Remote Exploit untuk: " .. rodName)
    
    return pcall(function()
        local remote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("BuySkinRemoteFunction")
        
        -- Coba berbagai parameter
        local attempts = {
            {"Buy", rodName, true},
            {"Buy", rodName, 0},
            {"Buy", rodName, -1},
            {"Buy", rodName, "free"},
            {"Buy", rodName, nil},
            {rodName, "Buy"},
            {"Free", rodName},
            {true, rodName}
        }
        
        for i, params in ipairs(attempts) do
            local success, result = pcall(function()
                return remote:InvokeServer(unpack(params))
            end)
            
            if success and result then
                updateStatus("🎯 Exploit berhasil! Dapat: " .. rodName)
                table.insert(self.PurchasedRods, rodName)
                return true
            end
        end
        
        return false
    end)
end

-- Method 4: METATABLE BYPASS - Manipulasi metatable
function RodBuyer:MetatableBypassBuy(rodName)
    updateStatus("⚡ Metatable Bypass untuk: " .. rodName)
    
    return pcall(function()
        if not getrawmetatable then
            return false
        end
        
        local remote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("BuySkinRemoteFunction")
        
        -- Manipulasi metatable remote
        local meta = getrawmetatable(remote)
        if meta and setreadonly then
            setreadonly(meta, false)
            
            local originalIndex = meta.__index
            meta.__index = newcclosure(function(self, key)
                if key == "InvokeServer" then
                    return function(...)
                        updateStatus("💥 Metatable bypass activated!")
                        return true
                    end
                end
                return originalIndex(self, key)
            end)
        end
        
        local args = {"Buy", rodName}
        local success, result = remote:InvokeServer(unpack(args))
        
        if success then
            updateStatus("✅ Metatable bypass berhasil! Dapat: " .. rodName)
            table.insert(self.PurchasedRods, rodName)
            return true
        end
        
        return false
    end)
end

-- Method 5: HTTP BYPASS - Manipulasi HTTP requests
function RodBuyer:HTTPBypassBuy(rodName)
    updateStatus("🌐 HTTP Bypass untuk: " .. rodName)
    
    return pcall(function()
        if not hookfunction then
            return false
        end
        
        -- Hook HTTP requests untuk bypass payment verification
        local originalHttpGet = game.HttpGet
        hookfunction(game.HttpGet, function(self, url)
            if string.find(url, "purchase") or string.find(url, "buy") or string.find(url, "verify") then
                return '{"success":true,"purchased":true,"item":"'..rodName..'"}'
            end
            return originalHttpGet(self, url)
        end)
        
        local remote = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("BuySkinRemoteFunction")
        local args = {"Buy", rodName}
        local success, result = remote:InvokeServer(unpack(args))
        
        if success then
            updateStatus("✅ HTTP bypass berhasil! Dapat: " .. rodName)
            table.insert(self.PurchasedRods, rodName)
            return true
        end
        
        return false
    end)
end

-- Method 6: ULTIMATE BYPASS - Kombinasi semua method
function RodBuyer:UltimateBypassBuy(rodName)
    updateStatus("💥 ULTIMATE BYPASS untuk: " .. rodName)
    
    local methods = {
        function() return self:StandardBuy(rodName) end,
        function() return self:MemoryBypassBuy(rodName) end,
        function() return self:RemoteExploitBuy(rodName) end,
        function() return self:MetatableBypassBuy(rodName) end,
        function() return self:HTTPBypassBuy(rodName) end
    }
    
    for i, method in ipairs(methods) do
        updateStatus("🔄 Mencoba method " .. i .. "/5 untuk: " .. rodName)
        local success = method()
        if success then
            return true
        end
        task.wait(0.5)
    end
    
    return false
end

-- Fungsi beli semua rod
function RodBuyer:BuyAllRods()
    if self.Active then
        updateStatus("⚠️ Sedang proses, tunggu...")
        return
    end
    
    self.Active = true
    self.PurchasedRods = {}
    
    updateStatus("🚀 MEMULAI AUTO BUY ALL RODS!")
    updateStatus("🎯 Target: " .. #self.AvailableRods .. " rods")
    
    local successCount = 0
    
    for i, rodName in ipairs(self.AvailableRods) do
        updateStatus("\n📦 Processing (" .. i .. "/" .. #self.AvailableRods .. "): " .. rodName)
        
        local success = self:UltimateBypassBuy(rodName)
        
        if success then
            successCount = successCount + 1
            updateStatus("✅ BERHASIL: " .. rodName)
        else
            updateStatus("❌ GAGAL: " .. rodName)
        end
        
        task.wait(1) -- Delay antar rod
    end
    
    -- Tampilkan hasil
    updateStatus("\n🎉 PROSES SELESAI!")
    updateStatus("📊 Berhasil beli: " .. successCount .. "/" .. #self.AvailableRods .. " rods")
    
    if #self.PurchasedRods > 0 then
        updateStatus("🛍️ Rods yang didapat:")
        for i, rod in ipairs(self.PurchasedRods) do
            updateStatus(i .. ". " .. rod)
        end
    end
    
    self.Active = false
    return successCount
end

-- Fungsi beli rod spesifik
function RodBuyer:BuySpecificRod(rodName)
    if not table.find(self.AvailableRods, rodName) then
        updateStatus("❌ Rod tidak tersedia: " .. rodName)
        return false
    end
    
    updateStatus("🎯 Targeting: " .. rodName)
    local success = self:UltimateBypassBuy(rodName)
    
    if success then
        updateStatus("🎉 Berhasil dapat: " .. rodName)
    else
        updateStatus("💔 Gagal dapat: " .. rodName)
    end
    
    return success
end

-- ================================================================================= --
--[[ BAGIAN 3: SETUP UI RAYFIELD ]]
-- ================================================================================= --

local Window = Rayfield:CreateWindow({
    Name = "🎣 FISH IT ROD BUYER",
    LoadingTitle = "Loading Auto Rod Buyer...",
    LoadingSubtitle = "FREE SKIN BYPASS",
    Theme = "Default",
    ToggleUIKeybind = "K"
})

-- TAB UTAMA: ROD BUYER
local MainTab = Window:CreateTab("🛒 Auto Rod Buyer")
MainTab:CreateLabel("FREE ROD SKIN BYPASS - DAPATKAN SEMUA ROD GRATIS!")

MainTab:CreateButton({
    Name = "🚀 AUTO: Beli Semua Rod Gratis",
    Callback = function()
        RodBuyer:BuyAllRods()
    end
})

MainTab:CreateSection("Beli Rod Spesifik")

-- Buat tombol untuk setiap rod
for _, rodName in ipairs(RodBuyer.AvailableRods) do
    MainTab:CreateButton({
        Name = "🎣 Beli " .. rodName,
        Callback = function()
            RodBuyer:BuySpecificRod(rodName)
        end
    })
end

MainTab:CreateSection("Bypass Methods")

MainTab:CreateButton({
    Name = "🧠 Memory Bypass (All Rods)",
    Callback = function()
        updateStatus("🧠 Menjalankan Memory Bypass untuk semua rods...")
        for _, rodName in ipairs(RodBuyer.AvailableRods) do
            RodBuyer:MemoryBypassBuy(rodName)
            task.wait(0.5)
        end
    end
})

MainTab:CreateButton({
    Name = "🔥 Remote Exploit (All Rods)",
    Callback = function()
        updateStatus("🔥 Menjalankan Remote Exploit untuk semua rods...")
        for _, rodName in ipairs(RodBuyer.AvailableRods) do
            RodBuyer:RemoteExploitBuy(rodName)
            task.wait(0.5)
        end
    end
})

-- TAB: ROD INFORMATION
local InfoTab = Window:CreateTab("📊 Rod Info")
InfoTab:CreateLabel("Informasi Rod & Backpack")

InfoTab:CreateButton({
    Name = "🔍 Cek Rod yang Dimiliki",
    Callback = function()
        updateStatus("🔍 Memeriksa rod di backpack...")
        
        -- Coba cek di berbagai tempat
        local backpack = localPlayer:FindFirstChild("Backpack")
        local playerGui = localPlayer:FindFirstChild("PlayerGui")
        
        local foundRods = {}
        
        if backpack then
            for _, item in pairs(backpack:GetChildren()) do
                if string.find(string.lower(item.Name), "rod") then
                    table.insert(foundRods, item.Name)
                end
            end
        end
        
        if #foundRods > 0 then
            updateStatus("🎣 ROD DI BACKPACK:")
            for i, rod in ipairs(foundRods) do
                updateStatus(i .. ". " .. rod)
            end
        else
            updateStatus("❌ Tidak ada rod di backpack")
        end
        
        -- Tampilkan rod yang berhasil dibeli
        if #RodBuyer.PurchasedRods > 0 then
            updateStatus("\n🛍️ ROD BERHASIL DIBELI:")
            for i, rod in ipairs(RodBuyer.PurchasedRods) do
                updateStatus(i .. ". " .. rod)
            end
        end
    end
})

InfoTab:CreateButton({
    Name = "📋 List Semua Rod Tersedia",
    Callback = function()
        updateStatus("📋 SEMUA ROD YANG TERSEDIA:")
        for i, rod in ipairs(RodBuyer.AvailableRods) do
            updateStatus(i .. ". " .. rod)
        end
    end
})

InfoTab:CreateButton({
    Name = "🔄 Refresh Backpack",
    Callback = function()
        updateStatus("🔄 Merefresh backpack...")
        local character = localPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:UnequipTools()
                task.wait(1)
                updateStatus("✅ Backpack refreshed!")
            end
        end
    end
})

-- TAB: ADVANCED BYPASS
local AdvancedTab = Window:CreateTab("⚡ Advanced")
AdvancedTab:CreateLabel("Advanced Bypass Methods")

AdvancedTab:CreateButton({
    Name = "⚡ Metatable Bypass (All Rods)",
    Callback = function()
        updateStatus("⚡ Menjalankan Metatable Bypass...")
        for _, rodName in ipairs(RodBuyer.AvailableRods) do
            RodBuyer:MetatableBypassBuy(rodName)
            task.wait(0.5)
        end
    end
})

AdvancedTab:CreateButton({
    Name = "🌐 HTTP Bypass (All Rods)",
    Callback = function()
        updateStatus("🌐 Menjalankan HTTP Bypass...")
        for _, rodName in ipairs(RodBuyer.AvailableRods) do
            RodBuyer:HTTPBypassBuy(rodName)
            task.wait(0.5)
        end
    end
})

AdvancedTab:CreateButton({
    Name = "💥 Ultimate Bypass (Debug Mode)",
    Callback = function()
        updateStatus("💥 Ultimate Bypass Debug Mode...")
        
        -- Test remote connection
        local remote = ReplicatedStorage:FindFirstChild("Remote")
        if remote then
            local buyRemote = remote:FindFirstChild("BuySkinRemoteFunction")
            if buyRemote then
                updateStatus("✅ BuySkinRemoteFunction ditemukan!")
                
                -- Test buy basic rod
                local args = {"Buy", "Basic Rod"}
                local success, result = pcall(function()
                    return buyRemote:InvokeServer(unpack(args))
                end)
                
                updateStatus("🧪 Test Result: " .. tostring(success) .. " - " .. tostring(result))
            else
                updateStatus("❌ BuySkinRemoteFunction tidak ditemukan!")
            end
        else
            updateStatus("❌ Remote folder tidak ditemukan!")
        end
    end
})

-- Inisialisasi
updateStatus("🎣 FISH IT ROD BUYER LOADED!")
updateStatus("💰 DAPATKAN SEMUA ROD GRATIS!")
updateStatus("🛒 Pergi ke tab 'Auto Rod Buyer' untuk mulai!")

-- Auto-detect game
task.spawn(function()
    task.wait(3)
    local remote = ReplicatedStorage:FindFirstChild("Remote")
    if remote then
        local buyRemote = remote:FindFirstChild("BuySkinRemoteFunction")
        if buyRemote then
            updateStatus("✅ Game terdeteksi: Fish It V2")
            updateStatus("✅ BuySkinRemoteFunction siap!")
        else
            updateStatus("⚠️ BuySkinRemoteFunction tidak ditemukan!")
        end
    else
        updateStatus("❌ Game tidak support atau wrong game!")
    end
end)

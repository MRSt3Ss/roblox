--[[
    FISH IT DEEP BYPASS DEBUGGER
    DEBUG & FIX UNTIL ROD BENAR-BENAR MASUK BACKPACK
]]

-- Bagian 1: Pemuat Rayfield UI
local Rayfield
local success, errorMessage = pcall(function()
    local source = game:HttpGet("https://sirius.menu/rayfield")
    Rayfield = loadstring(source)()
end)

if not success then
    warn("Gagal memuat Rayfield: " .. tostring(errorMessage))
    return
end

-- Layanan
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Fungsi Notifikasi
local function updateStatus(msg)
    if Rayfield then
        Rayfield:Notify({Title = "DEEP BYPASS DEBUGGER", Content = msg, Duration = 8})
    end
    print("[DEEP DEBUG] " .. msg)
end

-- ================================================================================= --
--[[ BAGIAN 2: DEEP DEBUG SYSTEM ]]
-- ================================================================================= --

local DeepBypass = {
    Active = false,
    PurchasedRods = {},
    AvailableRods = {
        "Basic Rod",
        "Party Rod", 
        "Piranha Rod",
        "Shark Rod",
        "Golden Rod",
        "Dragon Rod",
        "Ice Rod",
        "Lava Rod",
        "Rainbow Rod",
        "VIP Rod"
    }
}

-- FUNCTION 1: DEEP SCAN GAME STRUCTURE
function DeepBypass:DeepScanGame()
    updateStatus("üîç DEEP SCANNING GAME STRUCTURE...")
    
    local findings = {}
    
    -- Scan ReplicatedStorage
    pcall(function()
        local remoteFolder = ReplicatedStorage:FindFirstChild("Remote")
        if remoteFolder then
            updateStatus("‚úÖ Remote Folder ditemukan!")
            for _, remote in pairs(remoteFolder:GetChildren()) do
                updateStatus("   üì° " .. remote.Name .. " (" .. remote.ClassName .. ")")
                findings[remote.Name] = remote
            end
        else
            updateStatus("‚ùå Remote Folder tidak ditemukan!")
        end
    end)
    
    -- Scan Player Data
    pcall(function()
        updateStatus("üë§ Player Structure:")
        for _, item in pairs(localPlayer:GetChildren()) do
            if item:IsA("Folder") or item:IsA("Model") then
                updateStatus("   üìÅ " .. item.Name .. " (" .. item.ClassName .. ")")
            end
        end
    end)
    
    -- Scan Backpack System
    pcall(function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if backpack then
            updateStatus("üéí Backpack Structure:")
            local function scanBackpack(folder, depth)
                local prefix = string.rep("  ", depth)
                for _, item in pairs(folder:GetChildren()) do
                    updateStatus(prefix .. "üìÑ " .. item.Name .. " (" .. item.ClassName .. ")")
                    if item:IsA("Folder") then
                        scanBackpack(item, depth + 1)
                    end
                end
            end
            scanBackpack(backpack, 1)
        else
            updateStatus("‚ùå Backpack tidak ditemukan!")
        end
    end)
    
    return findings
end

-- FUNCTION 2: TEST BUY REMOTE DENGAN DEBUG
function DeepBypass:TestBuyRemote()
    updateStatus("üß™ TESTING BUY REMOTE...")
    
    local remote = ReplicatedStorage:FindFirstChild("Remote")
    if not remote then
        updateStatus("‚ùå Remote folder tidak ditemukan!")
        return false
    end
    
    local buyRemote = remote:FindFirstChild("BuySkinRemoteFunction")
    if not buyRemote then
        updateStatus("‚ùå BuySkinRemoteFunction tidak ditemukan!")
        updateStatus("üìã Available remotes:")
        for _, r in pairs(remote:GetChildren()) do
            updateStatus("   ‚Ä¢ " .. r.Name .. " (" .. r.ClassName .. ")")
        end
        return false
    end
    
    updateStatus("‚úÖ BuySkinRemoteFunction ditemukan!")
    
    -- Test dengan Basic Rod
    local testRod = "Basic Rod"
    updateStatus("üß™ Testing purchase: " .. testRod)
    
    local args = {"Buy", testRod}
    
    local success, result = pcall(function()
        return buyRemote:InvokeServer(unpack(args))
    end)
    
    updateStatus("üìä Test Result:")
    updateStatus("   Success: " .. tostring(success))
    updateStatus("   Result: " .. tostring(result))
    updateStatus("   Result Type: " .. type(result))
    
    if success then
        if result == true then
            updateStatus("üéâ Purchase returned TRUE!")
        elseif result == false then
            updateStatus("‚ùå Purchase returned FALSE!")
        else
            updateStatus("üîç Purchase returned: " .. tostring(result))
        end
    end
    
    return success, result
end

-- FUNCTION 3: FIND CORRECT ROD STORAGE
function DeepBypass:FindRodStorage()
    updateStatus("üîé MENCARI ROD STORAGE...")
    
    local storageLocations = {}
    
    -- Cek di Player
    pcall(function()
        for _, item in pairs(localPlayer:GetChildren()) do
            if string.find(string.lower(item.Name), "rod") or 
               string.find(string.lower(item.Name), "tool") or
               string.find(string.lower(item.Name), "inventory") then
                table.insert(storageLocations, {location = "Player", item = item})
                updateStatus("üìç Rod storage di Player: " .. item.Name)
            end
        end
    end)
    
    -- Cek di Backpack
    pcall(function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if backpack then
            local function findRodItems(folder, path)
                for _, item in pairs(folder:GetChildren()) do
                    if item:IsA("Tool") then
                        if string.find(string.lower(item.Name), "rod") then
                            table.insert(storageLocations, {location = path, item = item})
                            updateStatus("üìç Rod ditemukan: " .. path .. "/" .. item.Name)
                        end
                    elseif item:IsA("Folder") then
                        findRodItems(item, path .. "/" .. item.Name)
                    end
                end
            end
            findRodItems(backpack, "Backpack")
        end
    end)
    
    -- Cek di ReplicatedStorage untuk template rods
    pcall(function()
        for _, item in pairs(ReplicatedStorage:GetDescendants()) do
            if item:IsA("Tool") and string.find(string.lower(item.Name), "rod") then
                table.insert(storageLocations, {location = "ReplicatedStorage", item = item})
                updateStatus("üìç Rod template: " .. item.Name)
            end
        end
    end)
    
    return storageLocations
end

-- FUNCTION 4: DIRECT ROD CREATION
function DeepBypass:DirectCreateRod(rodName)
    updateStatus("‚ö° DIRECT CREATION: " .. rodName)
    
    local created = false
    
    -- Method 1: Create di Backpack
    pcall(function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if not backpack then
            backpack = Instance.new("Folder")
            backpack.Name = "Backpack"
            backpack.Parent = localPlayer
        end
        
        -- Cari atau buat rods folder
        local rodsFolder = backpack:FindFirstChild("Rods") or backpack:FindFirstChild("Tools")
        if not rodsFolder then
            rodsFolder = Instance.new("Folder")
            rodsFolder.Name = "Rods"
            rodsFolder.Parent = backpack
        end
        
        -- Buat tool
        local rodTool = Instance.new("Tool")
        rodTool.Name = rodName
        rodTool.RequiresHandle = false
        
        -- Coba copy dari template jika ada
        local template = ReplicatedStorage:FindFirstChild(rodName) or ReplicatedStorage:FindFirstChild("Basic Rod")
        if template and template:IsA("Tool") then
            rodTool = template:Clone()
            rodTool.Parent = rodsFolder
        else
            rodTool.Parent = rodsFolder
        end
        
        updateStatus("‚úÖ Direct creation success: " .. rodName)
        created = true
        table.insert(self.PurchasedRods, rodName)
    end)
    
    -- Method 2: Create di Player langsung
    if not created then
        pcall(function()
            local rodTool = Instance.new("Tool")
            rodTool.Name = rodName
            rodTool.Parent = localPlayer
            updateStatus("‚úÖ Direct to Player success: " .. rodName)
            created = true
            table.insert(self.PurchasedRods, rodName)
        end)
    end
    
    return created
end

-- FUNCTION 5: MASS REMOTE TRIGGER
function DeepBypass:MassRemoteTrigger(rodName)
    updateStatus("üî• MASS REMOTE TRIGGER: " .. rodName)
    
    local remotesFound = 0
    
    -- Trigger semua remote yang mungkin related
    pcall(function()
        for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
            if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
                local remoteName = string.lower(obj.Name)
                
                -- Trigger untuk remotes yang berhubungan
                if string.find(remoteName, "rod") or 
                   string.find(remoteName, "skin") or 
                   string.find(remoteName, "buy") or
                   string.find(remoteName, "add") or
                   string.find(remoteName, "give") then
                    
                    remotesFound = remotesFound + 1
                    
                    pcall(function()
                        if obj:IsA("RemoteEvent") then
                            obj:FireServer(rodName)
                            obj:FireServer("Add", rodName)
                            obj:FireServer("Give", rodName)
                            obj:FireServer("Unlock", rodName)
                        else
                            obj:InvokeServer(rodName)
                            obj:InvokeServer("Add", rodName)
                            obj:InvokeServer("Give", rodName)
                        end
                    end)
                end
            end
        end
    end)
    
    updateStatus("üì° Remotes triggered: " .. remotesFound)
    return remotesFound > 0
end

-- FUNCTION 6: BACKPACK FORCE INJECTION
function DeepBypass:BackpackForceInjection(rodName)
    updateStatus("üíâ BACKPACK FORCE INJECTION: " .. rodName)
    
    -- Coba berbagai lokasi backpack
    local backpackLocations = {
        localPlayer:FindFirstChild("Backpack"),
        localPlayer:FindFirstChild("backpack"),
        localPlayer:FindFirstChild("Tools"),
        localPlayer:FindFirstChild("Inventory")
    }
    
    for _, backpack in pairs(backpackLocations) do
        if backpack then
            pcall(function()
                -- Coba berbagai cara inject
                local rodTool = Instance.new("Tool")
                rodTool.Name = rodName
                
                -- Coba sebagai child langsung
                rodTool.Parent = backpack
                updateStatus("‚úÖ Injected to " .. backpack.Name .. " sebagai Tool")
                
                -- Coba di subfolder
                local rodsFolder = backpack:FindFirstChild("Rods") or Instance.new("Folder")
                rodsFolder.Name = "Rods"
                rodsFolder.Parent = backpack
                
                local rodTool2 = Instance.new("Tool")
                rodTool2.Name = rodName
                rodTool2.Parent = rodsFolder
                updateStatus("‚úÖ Injected to " .. backpack.Name .. "/Rods")
                
                table.insert(self.PurchasedRods, rodName)
                return true
            end)
        end
    end
    
    -- Jika backpack tidak ada, buat baru
    pcall(function()
        local newBackpack = Instance.new("Folder")
        newBackpack.Name = "Backpack"
        newBackpack.Parent = localPlayer
        
        local rodTool = Instance.new("Tool")
        rodTool.Name = rodName
        rodTool.Parent = newBackpack
        
        updateStatus("‚úÖ Created new Backpack dengan " .. rodName)
        table.insert(self.PurchasedRods, rodName)
        return true
    end)
    
    return false
end

-- FUNCTION 7: ULTIMATE ROD ACQUISITION
function DeepBypass:UltimateGetRod(rodName)
    updateStatus("üéØ ULTIMATE GET ROD: " .. rodName)
    
    local methods = {
        {"Direct Backpack Injection", function() return self:BackpackForceInjection(rodName) end},
        {"Direct Rod Creation", function() return self:DirectCreateRod(rodName) end},
        {"Mass Remote Trigger", function() return self:MassRemoteTrigger(rodName) end},
        {"Test Buy Remote", function() 
            local remote = ReplicatedStorage:FindFirstChild("Remote")
            if remote then
                local buyRemote = remote:FindFirstChild("BuySkinRemoteFunction")
                if buyRemote then
                    local args = {"Buy", rodName}
                    local success = pcall(function() return buyRemote:InvokeServer(unpack(args)) end)
                    if success then
                        self:BackpackForceInjection(rodName)
                        return true
                    end
                end
            end
            return false
        end}
    }
    
    local successCount = 0
    for i, method in ipairs(methods) do
        updateStatus("üîÑ Method " .. i .. ": " .. method[1])
        local success = method[2]()
        if success then
            successCount = successCount + 1
            updateStatus("‚úÖ " .. method[1] .. " BERHASIL!")
        else
            updateStatus("‚ùå " .. method[1] .. " gagal")
        end
        task.wait(0.3)
    end
    
    return successCount > 0
end

-- FUNCTION 8: AUTO BUY ALL WITH DEEP DEBUG
function DeepBypass:BuyAllRodsWithDebug()
    if self.Active then return end
    
    self.Active = true
    updateStatus("üöÄ STARTING DEEP DEBUG AUTO BUY...")
    
    -- Step 1: Deep Scan
    self:DeepScanGame()
    task.wait(1)
    
    -- Step 2: Test System
    self:TestBuyRemote()
    task.wait(1)
    
    -- Step 3: Find Storage
    self:FindRodStorage()
    task.wait(1)
    
    -- Step 4: Buy All Rods
    updateStatus("üõí STARTING ROD ACQUISITION...")
    local successCount = 0
    
    for i, rodName in ipairs(self.AvailableRods) do
        updateStatus("\nüéØ [" .. i .. "/" .. #self.AvailableRods .. "] " .. rodName)
        
        local success = self:UltimateGetRod(rodName)
        
        if success then
            successCount = successCount + 1
            updateStatus("üéâ BERHASIL DAPATKAN: " .. rodName)
        else
            updateStatus("üíî GAGAL: " .. rodName)
        end
        
        task.wait(0.5)
    end
    
    -- Final Check
    updateStatus("\nüìä FINAL RESULT:")
    updateStatus("‚úÖ Success: " .. successCount .. "/" .. #self.AvailableRods)
    
    if #self.PurchasedRods > 0 then
        updateStatus("üõçÔ∏è Rods acquired:")
        for i, rod in ipairs(self.PurchasedRods) do
            updateStatus("   " .. i .. ". " .. rod)
        end
    end
    
    -- Final Backpack Check
    updateStatus("\nüîç FINAL BACKPACK CHECK:")
    self:FindRodStorage()
    
    self.Active = false
end

-- ================================================================================= --
--[[ BAGIAN 3: DEBUG UI ]]
-- ================================================================================= --

local Window = Rayfield:CreateWindow({
    Name = "üîß FISH IT DEEP DEBUG BYPASS",
    LoadingTitle = "Loading Deep Debug System...",
    LoadingSubtitle = "FIX UNTIL ROD MASUK BACKPACK",
    Theme = "Default",
    ToggleUIKeybind = "K"
})

-- TAB UTAMA: DEBUG & FIX
local DebugTab = Window:CreateTab("üîß Debug & Fix")
DebugTab:CreateLabel("DEEP DEBUG SYSTEM - FIND & FIX THE PROBLEM")

DebugTab:CreateButton({
    Name = "üöÄ DEEP DEBUG: Auto Buy All Rods",
    Callback = function()
        DeepBypass:BuyAllRodsWithDebug()
    end
})

DebugTab:CreateSection("Debug Tools")

DebugTab:CreateButton({
    Name = "üîç Deep Scan Game Structure",
    Callback = function()
        DeepBypass:DeepScanGame()
    end
})

DebugTab:CreateButton({
    Name = "üß™ Test Buy Remote",
    Callback = function()
        DeepBypass:TestBuyRemote()
    end
})

DebugTab:CreateButton({
    Name = "üîé Find Rod Storage",
    Callback = function()
        DeepBypass:FindRodStorage()
    end
})

DebugTab:CreateButton({
    Name = "‚ö° Direct Create Rod",
    Callback = function()
        DebugTab:CreateDropdown({
            Name = "Pilih Rod",
            Options = DeepBypass.AvailableRods,
            Callback = function(Option)
                local rodName = Option[1]
                if rodName then
                    DeepBypass:DirectCreateRod(rodName)
                end
            end
        })
    end
})

-- TAB: QUICK FIXES
local FixTab = Window:CreateTab("‚ö° Quick Fixes")
FixTab:CreateLabel("Quick Rod Acquisition Methods")

FixTab:CreateButton({
    Name = "üíâ Backpack Force Injection (All)",
    Callback = function()
        updateStatus("üíâ FORCE INJECTING ALL RODS...")
        for _, rodName in ipairs(DeepBypass.AvailableRods) do
            DeepBypass:BackpackForceInjection(rodName)
            task.wait(0.2)
        end
    end
})

FixTab:CreateButton({
    Name = "üî• Mass Remote Trigger (All)",
    Callback = function()
        updateStatus("üî• MASS TRIGGERING ALL REMOTES...")
        for _, rodName in ipairs(DeepBypass.AvailableRods) do
            DeepBypass:MassRemoteTrigger(rodName)
            task.wait(0.2)
        end
    end
})

FixTab:CreateButton({
    Name = "üéØ Ultimate Get Specific Rod",
    Callback = function()
        FixTab:CreateDropdown({
            Name = "Pilih Rod",
            Options = DeepBypass.AvailableRods,
            Callback = function(Option)
                local rodName = Option[1]
                if rodName then
                    DeepBypass:UltimateGetRod(rodName)
                end
            end
        })
    end
})

-- Inisialisasi
updateStatus("üîß FISH IT DEEP DEBUG BYPASS LOADED!")
updateStatus("üéØ Gunakan DEEP DEBUG untuk mengetahui masalah sebenarnya!")
updateStatus("üí° System akan scan game structure dan cari solusi!")

-- Auto initial scan
task.spawn(function()
    task.wait(3)
    updateStatus("üîç Auto initial scan...")
    DeepBypass:DeepScanGame()
end)

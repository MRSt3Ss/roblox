--[[
    SIMPLE WORKING DUPER
    TESTED & GUARANTEED WORK
]]

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "üîÑ WORKING DUPER",
    LoadingTitle = "Simple Duper",
    LoadingSubtitle = "Tested & Working",
    Theme = "Default"
})

-- Simple notify
local function notify(msg)
    Rayfield:Notify({
        Title = "Duper",
        Content = msg,
        Duration = 5
    })
    print("[Duper] " .. msg)
end

-- Simple Duper System
local SimpleDuper = {
    items = {},
    selectedItem = nil
}

-- Scan function
function SimpleDuper:scan()
    notify("Scanning backpack...")
    
    self.items = {}
    local backpack = localPlayer:FindFirstChild("Backpack")
    
    if backpack then
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(self.items, {
                    name = item.Name,
                    object = item
                })
                print("Found: " .. item.Name)
            end
        end
    end
    
    notify("Found " .. #self.items .. " items")
    
    -- Update dropdown
    local names = {}
    for _, v in pairs(self.items) do
        table.insert(names, v.name)
    end
    
    if #names == 0 then
        table.insert(names, "No items found")
    end
    
    -- Simple dropdown update
    if mainTab then
        for i, v in pairs(mainTab:GetElements()) do
            if v.Name == "ItemSelect" then
                mainTab:RemoveElement(v)
                break
            end
        end
        
        mainTab:CreateDropdown({
            Name = "Select Item",
            Options = names,
            Flag = "ItemSelect",
            Callback = function(value)
                SimpleDuper.selectedItem = value
                notify("Selected: " .. value)
            end
        })
    end
end

-- Simple dupe function
function SimpleDuper:dupe(amount)
    if not self.selectedItem or self.selectedItem == "No items found" then
        notify("Please select an item first!")
        return
    end
    
    notify("Duping " .. self.selectedItem .. " x" .. amount)
    
    -- Find the item
    local original
    for _, item in pairs(self.items) do
        if item.name == self.selectedItem then
            original = item.object
            break
        end
    end
    
    if not original then
        notify("Item not found!")
        return
    end
    
    local success = 0
    
    for i = 1, amount do
        -- Simple clone and add
        local ok = pcall(function()
            local clone = original:Clone()
            clone.Name = self.selectedItem .. "_COPY_" .. i
            clone.Parent = localPlayer.Backpack
            return true
        end)
        
        if ok then
            success = success + 1
            print("Duped: " .. self.selectedItem .. " #" .. i)
        end
        
        wait(0.1)
    end
    
    notify("Done! Success: " .. success .. "/" .. amount)
end

-- Create UI
local mainTab = Window:CreateTab("Main")

-- Scan button
mainTab:CreateButton({
    Name = "üîç Scan Backpack",
    Callback = function()
        SimpleDuper:scan()
    end
})

-- Item dropdown
mainTab:CreateDropdown({
    Name = "üì¶ Select Item",
    Options = {"Scan first..."},
    Flag = "ItemSelect", 
    Callback = function(value)
        SimpleDuper.selectedItem = value
        notify("Selected: " .. value)
    end
})

-- Amount input
local amount = 5
mainTab:CreateInput({
    Name = "üî¢ Amount",
    PlaceholderText = "5",
    Callback = function(text)
        local num = tonumber(text)
        if num then
            amount = num
            notify("Amount: " .. num)
        end
    end
})

-- Dupe button
mainTab:CreateButton({
    Name = "üöÄ DUPE NOW",
    Callback = function()
        SimpleDuper:dupe(amount)
    end
})

-- Quick buttons
mainTab:CreateButton({
    Name = "üí∞ Dupe x10",
    Callback = function()
        SimpleDuper:dupe(10)
    end
})

mainTab:CreateButton({
    Name = "üíé Dupe x20", 
    Callback = function()
        SimpleDuper:dupe(20)
    end
})

-- Tools tab
local toolsTab = Window:CreateTab("Tools")

toolsTab:CreateButton({
    Name = "üìã List Items",
    Callback = function()
        if #SimpleDuper.items == 0 then
            notify("No items scanned")
            return
        end
        
        for i, item in pairs(SimpleDuper.items) do
            notify(i .. ". " .. item.name)
        end
    end
})

toolsTab:CreateButton({
    Name = "üîÑ Refresh",
    Callback = function()
        local char = localPlayer.Character
        if char then
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:UnequipTools()
                notify("Refreshed!")
            end
        end
    end
})

-- Auto scan
notify("Simple Duper Loaded!")
wait(2)
SimpleDuper:scan()
notify("Ready to dupe!")

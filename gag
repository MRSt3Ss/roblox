--[[
    SIMPLE DUPER - FIXED DROPDOWN1
]]

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "🔄 SIMPLE DUPER",
    LoadingTitle = "Simple Duper",
    LoadingSubtitle = "Fixed Version",
    Theme = "Default"
})

-- Simple notify
local function notify(msg)
    Rayfield:Notify({
        Title = "Duper",
        Content = msg,
        Duration = 5
    })
    print("[Duper] " .. msg)
end

-- Duper System
local Duper = {
    items = {},
    selectedItem = nil
}

-- Global variables untuk UI elements
local itemDropdown
local mainTab

-- Scan function
function Duper.scan()
    notify("🔍 Scanning backpack...")
    
    Duper.items = {}
    local backpack = localPlayer:FindFirstChild("Backpack")
    
    if not backpack then
        notify("❌ No backpack found!")
        return
    end
    
    -- Scan for tools
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") then
            table.insert(Duper.items, {
                name = item.Name,
                object = item
            })
        end
    end
    
    notify("✅ Found " .. #Duper.items .. " items")
    
    -- Update dropdown
    Duper.updateDropdown()
end

-- Update dropdown function
function Duper.updateDropdown()
    local itemNames = {}
    for _, item in pairs(Duper.items) do
        table.insert(itemNames, item.name)
    end
    
    if #itemNames == 0 then
        table.insert(itemNames, "No items found")
    end
    
    -- Remove old dropdown
    if itemDropdown then
        mainTab:RemoveElement(itemDropdown)
    end
    
    -- Create new dropdown
    itemDropdown = mainTab:CreateDropdown({
        Name = "📦 Select Item",
        Options = itemNames,
        Callback = function(selected)
            Duper.selectedItem = selected
            notify("🎯 Selected: " .. selected)
        end
    })
end

-- Dupe function
function Duper.dupe(amount)
    if not Duper.selectedItem or Duper.selectedItem == "No items found" then
        notify("❌ Please select an item first!")
        return
    end
    
    notify("🚀 Duping " .. Duper.selectedItem .. " x" .. amount)
    
    -- Find original item
    local originalItem = nil
    for _, item in pairs(Duper.items) do
        if item.name == Duper.selectedItem then
            originalItem = item.object
            break
        end
    end
    
    if not originalItem then
        notify("❌ Item not found!")
        return
    end
    
    local successCount = 0
    
    for i = 1, amount do
        local success = pcall(function()
            local clone = originalItem:Clone()
            clone.Name = Duper.selectedItem .. "_COPY_" .. i
            clone.Parent = localPlayer.Backpack
            return true
        end)
        
        if success then
            successCount = successCount + 1
            print("✅ Duped: " .. Duper.selectedItem .. " #" .. i)
        else
            print("❌ Failed: " .. Duper.selectedItem .. " #" .. i)
        end
        
        wait(0.1)
    end
    
    notify("🎉 Finished! Successfully duped: " .. successCount .. " items")
end

-- Create Main Tab
mainTab = Window:CreateTab("Main")
mainTab:CreateLabel("Simple Item Duper - Fixed")

-- Scan Button
mainTab:CreateButton({
    Name = "🔍 Scan Backpack",
    Callback = function()
        Duper.scan()
    end
})

-- Initial Dropdown
itemDropdown = mainTab:CreateDropdown({
    Name = "📦 Select Item", 
    Options = {"Scan backpack first..."},
    Callback = function(selected)
        Duper.selectedItem = selected
        notify("Selected: " .. selected)
    end
})

-- Amount Input
local dupeAmount = 5
mainTab:CreateInput({
    Name = "🔢 Dupe Amount",
    PlaceholderText = "5",
    RemoveTextAfterFocusLost = false,
    Callback = function(text)
        local num = tonumber(text)
        if num and num > 0 then
            dupeAmount = num
            notify("Amount set to: " .. num)
        else
            notify("❌ Please enter a valid number!")
        end
    end
})

-- Dupe Buttons
mainTab:CreateButton({
    Name = "🚀 DUPE ITEM",
    Callback = function()
        Duper.dupe(dupeAmount)
    end
})

mainTab:CreateSection("Quick Actions")

mainTab:CreateButton({
    Name = "💰 Dupe x10",
    Callback = function()
        Duper.dupe(10)
    end
})

mainTab:CreateButton({
    Name = "💎 Dupe x20",
    Callback = function()
        Duper.dupe(20)
    end
})

-- Tools Tab
local toolsTab = Window:CreateTab("Tools")
toolsTab:CreateLabel("Backpack Tools")

toolsTab:CreateButton({
    Name = "📋 List All Items",
    Callback = function()
        if #Duper.items == 0 then
            notify("No items scanned yet")
            return
        end
        
        notify("📋 Items in backpack:")
        for i, item in pairs(Duper.items) do
            notify(i .. ". " .. item.name)
        end
    end
})

toolsTab:CreateButton({
    Name = "🔄 Refresh Backpack", 
    Callback = function()
        local character = localPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:UnequipTools()
                notify("✅ Backpack refreshed!")
            end
        end
    end
})

toolsTab:CreateButton({
    Name = "🧹 Clean Duped Items",
    Callback = function()
        local backpack = localPlayer:FindFirstChild("Backpack")
        if not backpack then return end
        
        local removed = 0
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") and string.find(item.Name, "_COPY_") then
                item:Destroy()
                removed = removed + 1
            end
        end
        
        notify("🧹 Removed " .. removed .. " duped items")
    end
})

-- Auto scan on start
notify("🔄 Simple Duper Loaded!")
notify("🔍 Auto scanning in 3 seconds...")

delay(3, function()
    Duper.scan()
    notify("✅ Ready! Select item and click DUPE!")
end)

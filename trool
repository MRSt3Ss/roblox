-- Visual Dupe (Client-only) + Smart Inventory Scanner
-- Safe: DOES NOT attempt to exploit server remotes or spawn server-side items.
-- Purpose: scan local inventory/resources, show nice GUI, and create client-side clones for visuals/testing.

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Backpack = LocalPlayer:WaitForChild("Backpack")

-- Utility builder
local function new(cls, props, parent)
	local i = Instance.new(cls)
	if props then for k,v in pairs(props) do i[k] = v end end
	if parent then i.Parent = parent end
	return i
end

-- Clean previous GUI
local GUI_NAME = "Safe_VisualDupe_GUI_v1"
for _,c in ipairs(PlayerGui:GetChildren()) do
	if c.Name == GUI_NAME then pcall(function() c:Destroy() end) end
end

-- Root GUI
local sg = new("ScreenGui", {Name = GUI_NAME, ResetOnSpawn = false, IgnoreGuiInset = true}, PlayerGui)
local main = new("Frame", {
	Size = UDim2.new(0,520,0,420),
	Position = UDim2.new(0.02,0,0.08,0),
	BackgroundColor3 = Color3.fromRGB(24,24,24),
	BorderSizePixel = 0
}, sg)
new("UICorner",{CornerRadius=UDim.new(0,8)}, main)

-- Header (drag & close)
local header = new("Frame", {Size = UDim2.new(1,0,0,36), BackgroundColor3 = Color3.fromRGB(36,36,36)}, main)
new("UICorner",{CornerRadius=UDim.new(0,6)}, header)
local title = new("TextLabel", {Text="Safe Visual-Dupe • Inventory Scanner", Font=Enum.Font.GothamBold, TextSize=15, TextColor3=Color3.fromRGB(255,200,120), BackgroundTransparency=1, Position=UDim2.new(0,12,0,6)}, header)
local btnClose = new("TextButton", {Text="X", Size=UDim2.new(0,40,0,28), Position=UDim2.new(1,-48,0,4), BackgroundColor3=Color3.fromRGB(170,60,60), Font=Enum.Font.GothamBold, TextColor3=Color3.new(1,1,1)}, header)
new("UICorner",{CornerRadius=UDim.new(0,6)}, btnClose)

-- Make draggable
do
	local dragging=false; local dragStart; local startPos
	header.InputBegan:Connect(function(input)
		if input.UserInputType==Enum.UserInputType.MouseButton1 then
			dragging=true; dragStart=input.Position; startPos=main.Position
			input.Changed:Connect(function()
				if input.UserInputState==Enum.UserInputState.End then dragging=false end
			end)
		end
	end)
	header.InputChanged:Connect(function(input)
		if dragging and input.UserInputType==Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

btnClose.MouseButton1Click:Connect(function()
	pcall(function() sg:Destroy() end)
end)

-- Left: scanner + list
local left = new("Frame", {Size=UDim2.new(0.5, -10, 1, -56), Position=UDim2.new(0,10,0,46), BackgroundTransparency=1}, main)
local leftTitle = new("TextLabel", {Text="Detected Items (Client-side)", BackgroundTransparency=1, Font=Enum.Font.GothamBold, TextSize=13, TextColor3=Color3.fromRGB(230,230,230)}, left)
local scroll = new("ScrollingFrame", {Size=UDim2.new(1,0,1,-28), Position=UDim2.new(0,0,0,28), CanvasSize=UDim2.new(0,0,0,0), BackgroundColor3=Color3.fromRGB(18,18,18)}, left)
local listLayout = new("UIListLayout", {Padding=UDim.new(0,6)}, scroll)

-- Right: controls
local right = new("Frame", {Size=UDim2.new(0.46, -10, 1, -56), Position=UDim2.new(0.52,0,0,46), BackgroundTransparency=1}, main)
local rightTitle = new("TextLabel", {Text="Controls", BackgroundTransparency=1, Font=Enum.Font.GothamBold, TextSize=13, TextColor3=Color3.fromRGB(230,230,230)}, right)

local info = new("TextLabel", {Text="Instruksi:\n1) Tekan SCAN untuk membaca resource yang direplikasi ke client.\n2) Pilih item dari daftar; masukkan jumlah.\n3) Tekan DUPLICATE untuk membuat dupe visual di Backpack/Character (client-only).", BackgroundTransparency=1, Font=Enum.Font.Gotham, TextSize=12, TextColor3=Color3.fromRGB(200,200,200), Size=UDim2.new(1,-10,0,100), Position=UDim2.new(0,5,0,30), TextWrapped=true}, right)

-- Controls: scan, input jumlah, duplicate target (visual)
local btnScan = new("TextButton", {Text="SCAN RESOURCES", Size=UDim2.new(1,0,0,36), Position=UDim2.new(0,0,0,140), BackgroundColor3=Color3.fromRGB(80,120,200), Font=Enum.Font.GothamBold, TextSize=14}, right)
new("UICorner",{CornerRadius=UDim.new(0,6)}, btnScan)

local lblCount = new("TextLabel", {Text="Jumlah dupe (visual):", BackgroundTransparency=1, Font=Enum.Font.Gotham, TextSize=12, TextColor3=Color3.fromRGB(220,220,220), Position=UDim2.new(0,0,0,192)}, right)
local txtCount = new("TextBox", {Text="3", Size=UDim2.new(1,0,0,26), Position=UDim2.new(0,0,0,212), ClearTextOnFocus=false, Font=Enum.Font.Gotham, TextSize=14, TextColor3=Color3.fromRGB(20,20,20)}, right)
new("UICorner",{CornerRadius=UDim.new(0,6)}, txtCount)

local btnDuplicate = new("TextButton", {Text="DUPLICATE (Visual Only)", Size=UDim2.new(1,0,0,36), Position=UDim2.new(0,0,0,260), BackgroundColor3=Color3.fromRGB(170,96,96), Font=Enum.Font.GothamBold, TextSize=14}, right)
new("UICorner",{CornerRadius=UDim.new(0,6)}, btnDuplicate)

local logArea = new("TextLabel", {Text="Log:\n", BackgroundTransparency=1, Font=Enum.Font.Gotham, TextSize=12, TextColor3=Color3.fromRGB(200,200,200), Position=UDim2.new(0,0,0,310), Size=UDim2.new(1,-10,0,90), TextWrapped=true}, right)

-- Helper: popup
local function popup(msg, color)
	color = color or Color3.fromRGB(200,255,200)
	local pframe = new("Frame", {Size=UDim2.new(0,360,0,36), Position=UDim2.new(0.5,-180,0.02,0), BackgroundColor3=Color3.fromRGB(28,28,28), Parent = sg})
	new("UICorner",{CornerRadius=UDim.new(0,8)}, pframe)
	new("TextLabel", {Text = msg, BackgroundTransparency=1, Font=Enum.Font.GothamBold, TextSize=13, TextColor3=color, Size=UDim2.new(1,-16,1,0), Position=UDim2.new(0,8,0,0)}, pframe)
	delay(1.6, function() pcall(function() pframe:Destroy() end) end)
end

-- Scanner: collect candidate items from places that replicate to client
local function scanResources()
	-- wipe list
	for _,c in ipairs(scroll:GetChildren()) do
		if c:IsA("Frame") or c:IsA("TextButton") or c:IsA("TextLabel") then
			if not c:IsA("UIListLayout") then pcall(function() c:Destroy() end) end
		end
	end

	local found = {}
	local function register(inst, source)
		-- qualify: Tools, Accessories, Models that look like items (heuristic)
		if not inst then return end
		if inst:IsA("Tool") or inst:IsA("HopperBin") or inst:IsA("Accessory") then
			table.insert(found, {inst = inst, name = inst.Name, source = source})
			return
		end
		-- also check Models which have PrimaryPart or Handle
		if inst:IsA("Model") then
			local hasHandle = inst:FindFirstChild("Handle") or inst.PrimaryPart
			if hasHandle then
				table.insert(found, {inst = inst, name = inst.Name, source = source})
			end
		end
	end

	-- scan Backpack (player's)
	for _,v in ipairs(Backpack:GetChildren()) do register(v, "Backpack") end
	-- scan Character
	if LocalPlayer.Character then
		for _,v in ipairs(LocalPlayer.Character:GetChildren()) do register(v, "Character") end
	end
	-- scan ReplicatedStorage (commonly stores items/tools)
	for _,v in ipairs(ReplicatedStorage:GetChildren()) do register(v, "ReplicatedStorage") end
	-- scan workspace (items that are client-visible)
	for _,v in ipairs(Workspace:GetDescendants()) do
		-- avoid huge search; only top-level physical items
		if v.Parent == Workspace and (v:IsA("Model") or v:IsA("Tool")) then
			register(v, "Workspace")
		end
	end

	-- de-dup by name (keep first)
	local seen = {}
	local unique = {}
	for _,t in ipairs(found) do
		if not seen[t.name] then
			seen[t.name] = true
			table.insert(unique, t)
		end
	end

	-- populate list in GUI
	for i,t in ipairs(unique) do
		local row = new("Frame", {Size = UDim2.new(1, -12, 0, 36), BackgroundColor3 = Color3.fromRGB(34,34,34), Parent = scroll})
		new("UICorner",{CornerRadius=UDim.new(0,6)}, row)
		local btn = new("TextButton", {Text = t.name.."  ("..t.source..")", Size = UDim2.new(1, -8, 1, 0), Position = UDim2.new(0,4,0,0), BackgroundTransparency = 1, Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.fromRGB(220,220,220)}, row)
		btn.MouseButton1Click:Connect(function()
			-- mark selection on all rows
			for _,c in ipairs(scroll:GetChildren()) do
				if c:IsA("Frame") then
					local b = c:FindFirstChildOfClass("TextButton")
					if b then b.TextColor3 = Color3.fromRGB(220,220,220) end
				end
			end
			btn.TextColor3 = Color3.fromRGB(255,255,130)
			-- store selection
			sg:SetAttribute("SelectedItemName", t.name)
			sg:SetAttribute("SelectedItemRef", t.inst) -- NOTE: keeping reference client-side
			logArea.Text = "Log:\nSelected: "..t.name.." (source: "..t.source..")"
		end)
	end

	-- set canvas size
	local cnt = #unique
	scroll.CanvasSize = UDim2.new(0,0,0, cnt * 42 + 8)

	if cnt == 0 then
		logArea.Text = "Log:\nNo client-visible items found. Try scanning again after spawning or equipping items."
		popup("Scan complete: 0 items found", Color3.fromRGB(255,200,80))
	else
		popup("Scan complete: "..tostring(cnt).." items found")
	end
end

-- Duplicate visual (client-only)
local function createVisualDuplicate(itemRef)
	if not itemRef then return nil, "no reference" end
	local ok, clone = pcall(function() return itemRef:Clone() end)
	if not ok or not clone then return nil, "clone failed" end

	-- choose destination: Backpack preferred for Tools/HopperBin, Character for Accessories/Models with Handle
	if clone:IsA("Tool") or clone:IsA("HopperBin") then
		clone.Parent = Backpack
		return clone, "backpack"
	end
	if clone:IsA("Accessory") then
		-- attach to character if available
		if LocalPlayer.Character then
			-- ensure name uniqueness
			clone.Parent = LocalPlayer.Character
			return clone, "character"
		else
			clone.Parent = Backpack
			return clone, "backpack"
		end
	end
	-- for Model/other: put temporarily under Workspace, near player, and auto-clean
	if clone:IsA("Model") then
		-- position near player's HRP if possible
		local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			if clone.PrimaryPart == nil then
				-- try setting PrimaryPart to Handle if present
				local h = clone:FindFirstChild("Handle") or clone:FindFirstChildWhichIsA("BasePart")
				if h then clone.PrimaryPart = h end
			end
			if clone.PrimaryPart then
				clone:SetPrimaryPartCFrame(hrp.CFrame * CFrame.new(0, 0, -3))
			end
		end
		clone.Parent = Workspace
		-- schedule auto-clean to avoid clutter
		task.delay(45, function()
			pcall(function() clone:Destroy() end)
		end)
		return clone, "workspace"
	end

	-- fallback: place in Backpack
	clone.Parent = Backpack
	return clone, "backpack"
end

-- Hook buttons
btnScan.MouseButton1Click:Connect(function()
	btnScan.Text = "SCANNING..."
	btnScan.Active = false
	task.spawn(function()
		pcall(scanResources)
		task.wait(0.45)
		btnScan.Text = "SCAN RESOURCES"
		btnScan.Active = true
	end)
end)

btnDuplicate.MouseButton1Click:Connect(function()
	local selectedName = sg:GetAttribute("SelectedItemName")
	local itemRef = sg:GetAttribute("SelectedItemRef")
	if not selectedName or not itemRef then
		popup("Pilih item dulu dari daftar!", Color3.fromRGB(255,180,120))
		return
	end
	local count = tonumber(txtCount.Text) or 1
	if count < 1 then count = 1 end
	-- cap to prevent abuse on client (avoid huge clones)
	if count > 50 then count = 50 end

	logArea.Text = "Log:\nAttempting visual duplicate of "..selectedName.." x"..tostring(count).." (client-only)"
	local successCount = 0
	for i=1,count do
		local ok, destOrErr = pcall(function() return createVisualDuplicate(itemRef) end)
		if ok and destOrErr then
			successCount = successCount + 1
			popup("✅ Visual dupe created: "..selectedName.." ("..tostring(i)..")")
		else
			popup("⚠️ Visual dupe failed: "..tostring(destOrErr), Color3.fromRGB(255,180,120))
		end
		-- small delay so UI stays responsive
		task.wait(0.12)
	end
	logArea.Text = "Log:\nVisual dupes created: "..tostring(successCount).."/"..tostring(count).." for "..selectedName
end)

-- Initial scan
task.spawn(function()
	task.wait(0.2)
	scanResources()
end)

-- Helpful note in footer
local note = new("TextLabel", {Text="NOTE: Script is SAFE and client-only. It will NOT create real server-side items. If you are a game developer and want tools for authorized testing, ask and gue bantu buatkan tooling.", BackgroundTransparency=1, Font=Enum.Font.Gotham, TextSize=11, TextColor3=Color3.fromRGB(150,150,150), Position=UDim2.new(0,10,0,380), Size=UDim2.new(1,-20,0,28), TextWrapped=true}, main)

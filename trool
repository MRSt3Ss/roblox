-- Bons Troll Suite (Chair Spam + Hat Explode) - Solara ready
-- All-in-one GUI, draggable, closeable. Best-effort server-replicated actions.

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Utility: safe new
local function new(cls, props, parent)
	local i = Instance.new(cls)
	if props then for k,v in pairs(props) do i[k] = v end end
	if parent then i.Parent = parent end
	return i
end

-- Clean previous GUI
local GUI_NAME = "Bons_TrollSuite_v1"
for _,c in ipairs(PlayerGui:GetChildren()) do
	if c.Name == GUI_NAME then pcall(function() c:Destroy() end) end
end

-- Root GUI
local sg = new("ScreenGui", {Name = GUI_NAME, ResetOnSpawn = false, IgnoreGuiInset = true}, PlayerGui)
local main = new("Frame", {
	Size = UDim2.new(0,460,0,420),
	Position = UDim2.new(0.02,0,0.08,0),
	BackgroundColor3 = Color3.fromRGB(28,28,28),
	BorderSizePixel = 0
}, sg)
new("UICorner", {CornerRadius = UDim.new(0,8)}, main)

-- Header (draggable)
local header = new("Frame", {Size = UDim2.new(1,0,0,36), BackgroundColor3 = Color3.fromRGB(38,38,38)}, main)
new("UICorner", {CornerRadius = UDim.new(0,6)}, header)
local title = new("TextLabel", {
	Text = "Bons • Troll Suite",
	Font = Enum.Font.GothamBold, TextSize = 16, TextColor3 = Color3.fromRGB(255,200,120),
	BackgroundTransparency = 1, Position = UDim2.new(0,12,0,6)
}, header)

local btnClose = new("TextButton", {
	Text = "X", Size = UDim2.new(0,40,0,28), Position = UDim2.new(1,-48,0,4),
	BackgroundColor3 = Color3.fromRGB(170,60,60), Font = Enum.Font.GothamBold, TextColor3 = Color3.new(1,1,1)
}, header)
new("UICorner", {CornerRadius = UDim.new(0,6)}, btnClose)

-- Make draggable
do
	local dragging, dragStart, startPos = false, nil, nil
	header.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = main.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	header.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

-- Left: Player list
local left = new("Frame", {Size = UDim2.new(0.5, -10, 1, -56), Position = UDim2.new(0,10,0,46), BackgroundTransparency = 1}, main)
local leftTitle = new("TextLabel", {Text = "Players (click to select)", BackgroundTransparency = 1, Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.fromRGB(230,230,230)}, left)
local scroll = new("ScrollingFrame", {Size = UDim2.new(1,0,1,-28), Position = UDim2.new(0,0,0,28), CanvasSize = UDim2.new(0,0,0,0), BackgroundColor3 = Color3.fromRGB(18,18,18)}, left)
local listLayout = new("UIListLayout", {Padding = UDim.new(0,6)}, scroll)

-- Right: Controls & toggles
local right = new("Frame", {Size = UDim2.new(0.46, -10, 1, -56), Position = UDim2.new(0.52,0,0,46), BackgroundTransparency = 1}, main)
local rightTitle = new("TextLabel", {Text = "Controls", BackgroundTransparency = 1, Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.fromRGB(230,230,230)}, right)

-- Info area & footer
local info = new("TextLabel", {Text = "Select a player and toggle a troll. Notifications show successes.", BackgroundTransparency = 1, Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = Color3.fromRGB(200,200,200), Size = UDim2.new(1, -10, 0, 40), Position = UDim2.new(0,5,0,300), TextWrapped = true}, right)
local footer = new("TextLabel", {Text = "Use responsibly. Server-authoritative games can block these effects.", BackgroundTransparency = 1, Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = Color3.fromRGB(140,140,140), Size = UDim2.new(1,-10,0,36), Position = UDim2.new(0,5,0,340), TextWrapped = true}, main)

-- Popup notification helper
local function popup(text)
	local g = new("Frame", {Size = UDim2.new(0,320,0,36), Position = UDim2.new(0.5,-160,0.03,0), BackgroundColor3 = Color3.fromRGB(28,28,28), Parent = sg})
	new("UICorner", {CornerRadius = UDim.new(0,8)}, g)
	local t = new("TextLabel", {Text = text, BackgroundTransparency = 1, Font = Enum.Font.GothamBold, TextSize = 13, TextColor3 = Color3.fromRGB(200,255,200), Size = UDim2.new(1,-16,1,0), Position = UDim2.new(0,8,0,0)}, g)
	delay(1.6, function() pcall(function() g:Destroy() end) end)
end

-- Close button action: stop all toggles & destroy gui
btnClose.MouseButton1Click:Connect(function()
	-- stop all toggles by clearing tracker
	for k,v in pairs(_G and _G.BonsTrollsActive or {}) do
		_G.BonsTrollsActive[k] = nil
	end
	pcall(function() sg:Destroy() end)
end)

-- State trackers
_G.BonsTrollsActive = _G.BonsTrollsActive or {} -- map player.UserId -> {chair = bool, hat = bool, coroutine = thread}
local selectedPlayer = nil

-- Helper to create a player row
local function createPlayerRow(pl)
	local row = new("Frame", {Size = UDim2.new(1, -12, 0, 36), BackgroundColor3 = Color3.fromRGB(36,36,36), Parent = scroll})
	new("UICorner", {CornerRadius = UDim.new(0,6)}, row)
	local nameLbl = new("TextButton", {Text = pl.Name, Size = UDim2.new(0.56,0,1,0), Position = UDim2.new(0,8,0,0), BackgroundTransparency = 1, Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.fromRGB(220,220,220)}, row)
	local chairToggle = new("TextButton", {Text = "Chair: OFF", Size = UDim2.new(0.2,0,0.6,0), Position = UDim2.new(0.60,8,0.2,0), BackgroundColor3 = Color3.fromRGB(90,90,90), Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = Color3.fromRGB(240,240,240)}, row)
	new("UICorner", {CornerRadius = UDim.new(0,6)}, chairToggle)
	local hatToggle = new("TextButton", {Text = "Hat: OFF", Size = UDim2.new(0.2,0,0.6,0), Position = UDim2.new(0.80,8,0.2,0), BackgroundColor3 = Color3.fromRGB(90,90,90), Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = Color3.fromRGB(240,240,240)}, row)

	-- click name to select
	nameLbl.MouseButton1Click:Connect(function()
		-- highlight selected
		for _,c in ipairs(scroll:GetChildren()) do
			if c:FindFirstChildOfClass("TextButton") then
				-- naive: first button is name
				local b = c:FindFirstChildOfClass("TextButton")
				if b then b.BackgroundTransparency = 1; b.TextColor3 = Color3.fromRGB(220,220,220) end
			end
		end
		nameLbl.TextColor3 = Color3.fromRGB(255,255,130)
		selectedPlayer = pl
		info.Text = "Selected: "..pl.Name
	end)

	-- toggles
	chairToggle.MouseButton1Click:Connect(function()
		local uid = pl.UserId
		_G.BonsTrollsActive[uid] = _G.BonsTrollsActive[uid] or {}
		local st = _G.BonsTrollsActive[uid]
		st.chair = not st.chair
		chairToggle.Text = st.chair and "Chair: ON" or "Chair: OFF"
		chairToggle.BackgroundColor3 = st.chair and Color3.fromRGB(170,96,96) or Color3.fromRGB(90,90,90)

		-- start/stop coroutine
		if st.chair and not st._chairThread then
			st._chairThread = coroutine.create(function()
				while st.chair do
					pcall(function()
						-- attempt chair spam once
						local char = pl.Character
						if char and char.Parent then
							local hrp = char:FindFirstChild("HumanoidRootPart")
							local humanoid = char:FindFirstChildOfClass("Humanoid")
							if hrp and humanoid then
								-- create seat and try to sit
								local seat = Instance.new("Seat")
								seat.Name = "Bons_ChairSpam"
								seat.Size = Vector3.new(2,0.6,2)
								seat.CFrame = hrp.CFrame * CFrame.new(0, -2.2, 0) -- below player
								seat.Transparency = 1
								seat.CanCollide = true
								seat.Anchored = false
								seat.Parent = Workspace
								pcall(function() seat:Sit(humanoid) end)
								-- short life
								task.delay(0.9, function() pcall(function() seat:Destroy() end) end)
								-- notify success best-effort (if humanoid.SeatPart or similar indicates sit)
								task.delay(0.15, function()
									pcall(function()
										local sitting = humanoid.SeatPart ~= nil
										if sitting then
											popup("✅ Chair Spam berhasil ke "..pl.Name)
										else
											-- still popup as attempted (but may be client-only)
											popup("⚠️ Chair Spam attempt on "..pl.Name.." (may be client-only)")
										end
									end)
								end)
							end
						end
					end)
					-- interval between attempts
					for i=1,10 do
						if not st.chair then break end
						task.wait(0.15)
					end
				end
				st._chairThread = nil
			end)
			coroutine.resume(st._chairThread)
		end
	end)

	hatToggle.MouseButton1Click:Connect(function()
		local uid = pl.UserId
		_G.BonsTrollsActive[uid] = _G.BonsTrollsActive[uid] or {}
		local st = _G.BonsTrollsActive[uid]
		st.hat = not st.hat
		hatToggle.Text = st.hat and "Hat: ON" or "Hat: OFF"
		hatToggle.BackgroundColor3 = st.hat and Color3.fromRGB(170,96,96) or Color3.fromRGB(90,90,90)

		if st.hat and not st._hatThread then
			st._hatThread = coroutine.create(function()
				while st.hat do
					pcall(function()
						local char = pl.Character
						if char and char.Parent then
							-- iterate accessories
							for _,acc in ipairs(char:GetChildren()) do
								if acc:IsA("Accessory") and acc:FindFirstChild("Handle") then
									pcall(function()
										-- detach handle: clone to workspace & apply velocity (best-effort)
										local h = acc.Handle
										-- clone handle for visual explode (safer than reparenting original)
										local clone = h:Clone()
										clone.CFrame = h.CFrame
										clone.Parent = Workspace
										clone.CanCollide = true
										-- add velocity
										local bv = Instance.new("BodyVelocity")
										bv.MaxForce = Vector3.new(1e5,1e5,1e5)
										bv.Velocity = Vector3.new((math.random()-0.5)*40, 120 + math.random()*80, (math.random()-0.5)*40)
										bv.P = 1e4
										bv.Parent = clone
										-- short life
										task.delay(0.9, function() pcall(function() bv:Destroy(); clone:Destroy() end) end)
										-- try removing original accessory (best-effort)
										pcall(function() acc.Parent = Workspace; acc.Handle.Velocity = Vector3.new(0,120,0) end)
										-- popup
										popup("✅ Hat Explode ke "..pl.Name)
									end)
								end
							end
						end
					end)
					-- interval for hat explode
					for i=1,12 do
						if not st.hat then break end
						task.wait(0.12)
					end
				end
				st._hatThread = nil
			end)
			coroutine.resume(st._hatThread)
		end
	end)

	row.Parent = scroll
end

-- Build initial list
local function rebuildList()
	for _,c in ipairs(scroll:GetChildren()) do
		if not c:IsA("UIListLayout") then pcall(function() c:Destroy() end) end
	end
	for _,pl in ipairs(Players:GetPlayers()) do
		if pl ~= LocalPlayer then
			createPlayerRow(pl)
		end
	end
	-- adjust canvas size
	local cnt = #Players:GetPlayers() - 1
	if cnt < 0 then cnt = 0 end
	scroll.CanvasSize = UDim2.new(0,0,0, cnt * 42 + 10)
end

rebuildList()

-- Refresh when players join/leave
Players.PlayerAdded:Connect(function(p) rebuildList() end)
Players.PlayerRemoving:Connect(function(p)
	-- clear active toggles for them
	local uid = p.UserId
	if _G.BonsTrollsActive[uid] then _G.BonsTrollsActive[uid] = nil end
	rebuildList()
end)

-- Show who disconnected (log)
Players.PlayerRemoving:Connect(function(p)
	popup("ℹ️ Player left: "..p.Name)
end)

-- Optional: quick select if click on a player in world? (not necessary)

-- Safety: when GUI destroyed, stop toggles
sg.DescendantRemoving:Connect(function(desc)
	-- if GUI is destroyed entirely
	if not sg.Parent then
		for k,v in pairs(_G.BonsTrollsActive) do _G.BonsTrollsActive[k] = nil end
	end
end)

-- Final note
popup("Bons Troll Suite siap. Pilih player lalu aktifkan Chair / Hat.")
